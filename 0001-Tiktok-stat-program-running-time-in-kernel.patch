From c69690181ad15b904888bd8127944ac9eb4b3863 Mon Sep 17 00:00:00 2001
From: Jiahao Li <gloit042@gmail.com>
Date: Tue, 15 Dec 2020 00:02:44 +0800
Subject: [PATCH] Tiktok: stat program running time in kernel

Signed-off-by: Jiahao Li <gloit042@gmail.com>
---
 fs/Kconfig         |  1 +
 fs/Makefile        |  1 +
 fs/tiktok/Kconfig  |  3 ++
 fs/tiktok/Makefile |  4 +++
 fs/tiktok/procfs.c | 91 ++++++++++++++++++++++++++++++++++++++++++++++++++++++
 fs/tiktok/tiktok.h |  6 ++++
 6 files changed, 106 insertions(+)
 create mode 100644 fs/tiktok/Kconfig
 create mode 100644 fs/tiktok/Makefile
 create mode 100644 fs/tiktok/procfs.c
 create mode 100644 fs/tiktok/tiktok.h

diff --git a/fs/Kconfig b/fs/Kconfig
index 2501e6f..b161d71 100644
--- a/fs/Kconfig
+++ b/fs/Kconfig
@@ -321,5 +321,6 @@ endif # NETWORK_FILESYSTEMS
 source "fs/nls/Kconfig"
 source "fs/dlm/Kconfig"
 source "fs/unicode/Kconfig"
+source "fs/tiktok/Kconfig"
 
 endmenu
diff --git a/fs/Makefile b/fs/Makefile
index 14231b4..4a2ffdb 100644
--- a/fs/Makefile
+++ b/fs/Makefile
@@ -132,3 +132,4 @@ obj-$(CONFIG_CEPH_FS)		+= ceph/
 obj-$(CONFIG_PSTORE)		+= pstore/
 obj-$(CONFIG_EFIVAR_FS)		+= efivarfs/
 obj-$(CONFIG_EROFS_FS)		+= erofs/
+obj-$(CONFIG_TIKTOK)		+= tiktok/
diff --git a/fs/tiktok/Kconfig b/fs/tiktok/Kconfig
new file mode 100644
index 0000000..9f6df79
--- /dev/null
+++ b/fs/tiktok/Kconfig
@@ -0,0 +1,3 @@
+# SPDX-License-Identifier: GPL-2.0-only
+config TIKTOK
+	tristate "Tiktok: stat program running time in kernel"
diff --git a/fs/tiktok/Makefile b/fs/tiktok/Makefile
new file mode 100644
index 0000000..ac8d71b
--- /dev/null
+++ b/fs/tiktok/Makefile
@@ -0,0 +1,4 @@
+# SPDX-License-Identifier: GPL-2.0
+
+obj-$(CONFIG_TIKTOK) += tiktok.o
+tiktok-objs := procfs.o target.o
diff --git a/fs/tiktok/procfs.c b/fs/tiktok/procfs.c
new file mode 100644
index 0000000..1736a86
--- /dev/null
+++ b/fs/tiktok/procfs.c
@@ -0,0 +1,91 @@
+#include <linux/init.h>
+#include <linux/module.h>
+#include <linux/kernel.h>
+#include <linux/fs.h>
+#include <linux/proc_fs.h>
+#include <linux/kthread.h>
+#include <linux/mutex.h>
+#include <linux/completion.h>
+#include <linux/time.h>
+#include <asm/fpu/internal.h>
+#include "tiktok.h"
+
+static const char proc_dirname[] = "tiktok";
+struct proc_dir_entry *tiktok_proc_root;
+struct mutex perf_lock;
+struct completion perf_done;
+
+int perf_thread(void *data) {
+	int i = 0;
+	u64 nsecs = 0;
+	u64 msecs;
+	u64 seqs[TIKTOK_REPEATS];
+	kernel_fpu_begin();
+	while (i < TIKTOK_WARMUP) {
+		target_main();
+		i += 1;
+	}
+	i = 0;
+	while (i < TIKTOK_REPEATS) {
+		struct timespec start = {0}, end = {0};
+		getrawmonotonic(&start);
+		target_main();
+		getrawmonotonic(&end);
+		seqs[i] = (end.tv_sec - start.tv_sec) * 1000000000 + end.tv_nsec - start.tv_nsec;
+		nsecs += seqs[i];
+		i += 1;
+	}
+	kernel_fpu_end();
+	msecs = nsecs / TIKTOK_REPEATS / 1000;
+	i = 0;
+	printk(KERN_INFO "Tiktok: seqs: ");
+	while (i < TIKTOK_REPEATS) {
+		printk(KERN_INFO "%llu", seqs[i]);
+		i += 1;
+	}
+	printk(KERN_INFO "Tiktok: Average runtime: %llu.%llu\n", msecs / 1000, msecs % 1000);
+	complete_and_exit(&perf_done, 0);
+}
+
+ssize_t tiktok_run_perf(struct file *filp, const char __user *buf,
+						  size_t len, loff_t *ppos) {
+	struct task_struct *runner;
+	mutex_lock(&perf_lock);
+	reinit_completion(&perf_done);
+	runner = kthread_create(perf_thread, NULL, "tiktok_run");
+	kthread_bind(runner, 0);
+	wake_up_process(runner);
+	wait_for_completion(&perf_done);
+	mutex_unlock(&perf_lock);
+	return len;
+}
+
+static const struct file_operations tiktok_perf_fops = {
+	.owner		= THIS_MODULE,
+	.write		= tiktok_run_perf
+};
+
+static int __init tiktok_init(void) {
+	if ((tiktok_proc_root = proc_mkdir(proc_dirname, NULL)) == NULL)
+		return -EEXIST;
+	if (proc_create("perf", 0444, tiktok_proc_root, &tiktok_perf_fops) == NULL)
+		return -ENOMEM;
+	printk(KERN_INFO "Tiktok loaded\n");
+	mutex_init(&perf_lock);
+	init_completion(&perf_done);
+	return 0;
+}
+
+static void __exit tiktok_exit(void) {
+	remove_proc_entry("perf", tiktok_proc_root);
+	remove_proc_entry("tiktok", NULL);
+	printk(KERN_INFO "Tiktok exits\n");
+}
+
+module_init(tiktok_init);
+module_exit(tiktok_exit);
+
+MODULE_LICENSE("GPL v2");
+MODULE_ALIAS("tiktok");
+MODULE_AUTHOR("Jiahao Li <gloit042@gmail.com>");
+MODULE_DESCRIPTION("stat program running time in kernel");
diff --git a/fs/tiktok/tiktok.h b/fs/tiktok/tiktok.h
new file mode 100644
index 0000000..528cb60
--- /dev/null
+++ b/fs/tiktok/tiktok.h
@@ -0,0 +1,6 @@
+#ifndef TIKTOK_H
+#define TIKTOK_H
+#define TIKTOK_REPEATS 10
+#define TIKTOK_WARMUP 3
+int target_main(void);
+#endif
\ No newline at end of file
-- 
2.12.2

